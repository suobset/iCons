%Seb and Kush 2/9/23
%This script takes in a csv file with PV generation and load and calculates
%how large the PV size must be increased to meet the entire load, assuming
%that a battery-energy-storage-system exists which can store the solar.
%it also provides the final power capacity of the solar array, based on the
%maximum instantaneous power generated.

clear;

file = 'ISONEdata.csv';
BESSeff = 0.8; %assume 80% battery efficiency
data = readmatrix(file);

pvGen = data(:,3);
windGen = data(:,2);
hydroGen = data(:,4);
load = data(:,1);

rentot = sum(pvGen+windGen+hydroGen, 'omitnan'); %total MWh generated by renewables
loadtot = sum(load, 'omitnan'); %total MWh

figure
plot(hydroGen);
hold on;
plot(windGen);
plot(pvGen);
plot(load,'lineWidth',1.5);
title({'Seb and Kush: original load and renewable generation from: '+string(file);
    sprintf('total load: %g MWh, total renewable gen: %g MWh',loadtot,rentot)})
ylabel('MW');
xlabel('time (hr)');
legend({'PV','wind','hydro','load'});

%assume we store all ren. in BESS
rentotBESS = rentot*BESSeff;

%how much bigger should the PV be to meet all load?
scaleup = loadtot/rentotBESS;

%new renewables
pvGenNew = scaleup*pvGen;
windGenNew = scaleup*windGen;
hydroGenNew = scaleup*hydroGen;
rentotNew = sum(pvGenNew+windGenNew+hydroGenNew, 'omitnan'); %total MWh generated by renewables

figure
plot(hydroGenNew);
hold on;
plot(windGenNew);
plot(pvGenNew);
plot(load,'lineWidth',1.5);
title({'Seb and Kush: load and scaled renewable generation from: '+string(file);
    sprintf('total load: %g MWh, total renewable gen: %g MWh (assume %g BESS efficiency)',loadtot,rentotNew,BESSeff);
    sprintf('renewables scale up factor: %g',scaleup)});
ylabel('MW');
xlabel('time (hr)');
legend({'PV','wind','hydro','load'});


varNames = {'scaleup','Battery Efficiency'};
dataOut = table(scaleup,BESSeff,'VariableNames',varNames);
% dataOut(:,1) = cell(pvGenNew);
% dataOut(:,2) = cell(windGenNew);
% dataOut(:,3) = cell(hydroGenNew);
% dataOut(1,4) = cell(scaleup);
% dataOut(1,5) = cell(BESSeff);

writetable(dataOut,'finalData.csv');



