"use strict";(self.webpackChunki_cons_4=self.webpackChunki_cons_4||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/iCons/iCons4/docs/intro","docId":"intro"},{"type":"category","label":"Definitions","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"RUST","href":"/iCons/iCons4/docs/definitions/congratulations","docId":"definitions/congratulations"}],"href":"/iCons/iCons4/docs/category/definitions"}]},"docs":{"definitions/congratulations":{"id":"definitions/congratulations","title":"RUST","description":"Rust is a statically-typed systems programming language known for its emphasis on memory safety, zero-cost abstractions, and high performance. It was first developed by Mozilla and released in 2010. Rust\'s design goals include providing a safe and concurrent alternative to C and C++, while maintaining low-level control over hardware and system resources.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Introduction","description":"This project mainly compares and contrasts between the RUST Programming Language, and the C++ Programming Language. We focus on the Cargo and Clang Compilers respectively, since they are both based on the LLVM Architecture. Thus, the low-level assembly generated by the LLVM compiler remains uniform between the two languages, and comparisons can be made.","sidebar":"tutorialSidebar"}}}')}}]);